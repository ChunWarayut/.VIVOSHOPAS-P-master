@model VIVOSHOP.Models.ProductOrder

@{
    ViewBag.Title = "Edit";
}



@{
    if (Session["User_Id"] != null && Session["User_Id"].ToString() != "50001")
    {

        using (Html.BeginForm(Html.BeginForm("Edit", "ProductOrders", FormMethod.Post, new { enctype = "multipart/form-data" })))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Order_Id)

                <div class="row">

                    <div class="col-md-8">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserAccout.User_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserAccout.User_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.UserAccout.User_Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Order_Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Order_Price, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Order_Price, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.Label("สินค้าที่สั่งซื้อ", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">

                                @{
                                    var getlist = ViewBag.order as IEnumerable<VIVOSHOP.Models.OrderDetail>;

                                    foreach (var item in getlist)
                                    {
                                        <p>@item.Product.Pro_Name จำนวน @item.OrderDetails_Number ราคา @item.Pro_Price บาท</p>
                                    }
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Order_Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Order_Address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Order_Address, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @{
                            if (Session["User_Id"] != null && Session["User_Id"].ToString() == "50001")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Order_Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Order_Status, new List<SelectListItem>{
                                            new SelectListItem() {Text = "รอชำระเงิน", Value="รอชำระเงิน"},
                                            new SelectListItem() {Text = "ชำระแล้ว", Value="ชำระแล้ว"},
                                            new SelectListItem() {Text = "จัดส่งแล้ว", Value="จัดส่งแล้ว"}
                                            }, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Order_Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                        }

                        @{
                            if (Session["User_Id"] != null && Session["User_Id"].ToString() == "50001")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Order_Parcel, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Order_Parcel, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Order_Parcel, "", new { @class = "text-danger" })
                                    </div>
                                </div>}
                        }

                        @{
                            if (Session["User_Id"] != null && Session["User_Id"].ToString() != "50001")
                            {

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Order_img, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.Order_img, "", new { type = "file" })
                                        @Html.ValidationMessageFor(model => model.Order_img, "", new { @class = "text-danger" })

                                        <label class="text-danger">กรุณาเลือกรูป</label>
                                    </div>
                                </div>
                            }
                        }


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="บันทึก" class="btn btn-default" />
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <img src="~/image/@Html.DisplayFor(model => model.Order_img)"
                             alt="company logo"
                             height="225"
                             asp-append-version="true" />
                    </div>
                </div>
            </div>
        }
    }}


@{
    if (Session["User_Id"] != null && Session["User_Id"].ToString() == "50001")
    {

        using (Html.BeginForm(Html.BeginForm("Edits", "ProductOrders", FormMethod.Post, new { enctype = "multipart/form-data" })))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Order_Id)

                <div class="row">

                    <div class="col-md-8">
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserAccout.User_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.UserAccout.User_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.UserAccout.User_Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Order_Price, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Order_Price, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Order_Price, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.Label("สินค้าที่สั่งซื้อ", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">

                                @{
                                    var getlist = ViewBag.order as IEnumerable<VIVOSHOP.Models.OrderDetail>;

                                    foreach (var item in getlist)
                                    {
                                        <p>@item.Product.Pro_Name จำนวน @item.OrderDetails_Number ราคา @item.Pro_Price บาท</p>
                                    }
                                }
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Order_Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Order_Address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Order_Address, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @{
                            if (Session["User_Id"] != null && Session["User_Id"].ToString() == "50001")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Order_Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Order_Status, new List<SelectListItem>{
                                            new SelectListItem() {Text = "รอชำระเงิน", Value="รอชำระเงิน"},
                                            new SelectListItem() {Text = "ชำระแล้ว", Value="ชำระแล้ว"},
                                            new SelectListItem() {Text = "จัดส่งแล้ว", Value="จัดส่งแล้ว"}
                                            }, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Order_Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                        }

                        @{
                            if (Session["User_Id"] != null && Session["User_Id"].ToString() == "50001")
                            {
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Order_Parcel, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Order_Parcel, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Order_Parcel, "", new { @class = "text-danger" })
                                    </div>
                                </div>}
                        }

                        @{
                            if (Session["User_Id"] != null && Session["User_Id"].ToString() != "50001")
                            {

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Order_img, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextBoxFor(model => model.Order_img, "", new { type = "file" })
                                        @Html.ValidationMessageFor(model => model.Order_img, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            }
                        }


                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="บันทึก" class="btn btn-default" />
                            </div>
                        </div>

                    </div>
                    <div class="col-md-4">
                        <img src="~/image/@Html.DisplayFor(model => model.Order_img)"
                             alt="company logo"
                             height="225"
                             asp-append-version="true" />
                    </div>
                </div>
            </div>
        }
    }


}





@{
    if (Session["User_Id"] != null && Session["User_Id"].ToString() == "50001")
    {

        <div>
            @Html.ActionLink("ย้อนกลับ", "Index")
        </div>

    }
}
@{
    if (Session["User_Id"] != null && Session["User_Id"].ToString() != "50001")
    {
        <div>
            @Html.ActionLink("ย้อนกลับ", "Index", "History", null, null)
        </div>

    }
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
