@model VIVOSHOP.Models.ProductOrder

@{
    ViewBag.Title = "Edit";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal"> 
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Order_Id)

    <div class="form-group">
        @Html.LabelFor(model => model.User_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserAccout.User_Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.User_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order_Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order_Date, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @*@Html.ValidationMessageFor(model => model.Order_Date, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order_Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order_Price, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.Order_Price, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.Label("สินค้าที่สั่งซื้อ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
             
                @{
                    var getlist = ViewBag.order as IEnumerable<VIVOSHOP.Models.OrderDetail>;

                    foreach (var item in getlist)
                    {
                        <p>@item.Product.Pro_Name จำนวน @item.OrderDetails_Number ราคา @item.Pro_Price บาท</p>
                    }
                } 
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Order_Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Order_Status, new List<SelectListItem>{
                new SelectListItem() {Text = "รอชำระเงิน", Value="รอชำระเงิน"},
                new SelectListItem() {Text = "ชำระแล้ว", Value="ชำระแล้ว"}
                }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Order_Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order_Parcel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order_Parcel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order_Parcel, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="บันทึก" class="btn btn-default" />
        </div>
    </div>
</div>
}
 
<div>
    @Html.ActionLink("ย้อนกลับ", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
