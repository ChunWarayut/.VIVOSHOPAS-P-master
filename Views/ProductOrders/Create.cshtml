@model VIVOSHOP.Models.ProductOrder

@{
    ViewBag.Title = "Create";
}

<h2>ระบบออกใบสั่งซื้อ</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Product Order System</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.User_Id, "ชื่อลูกค้า", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("User_Id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.User_Id, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.User_Id, "ชื่อลูกค้า", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" class="form-control" readonly value="@Session["User_Name"]" id="User_Name" name="User_Name" />
            <input type="hidden" class="form-control" readonly value="@Session["User_Id"]" id="User_Id" name="User_Id" />
            @Html.ValidationMessageFor(model => model.User_Id, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Order_Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" class="form-control" readonly value="@ViewBag.Prosum" id="Order_Price" name="Order_Price" />
            @Html.ValidationMessageFor(model => model.Order_Price, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.Order_Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Order_Status, new List<SelectListItem>{
                new SelectListItem() {Text = "รอชำระเงิน", Value="รอชำระเงิน"},
                new SelectListItem() {Text = "ชำระแล้ว", Value="ชำระแล้ว"}
                }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Order_Status, "", new { @class = "text-danger" })
        </div>
    </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.Order_Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" class="form-control" readonly value="รอชำระเงิน" id="Order_Status" name="Order_Status" />
            @Html.ValidationMessageFor(model => model.Order_Status, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.Order_Parcel, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Order_Parcel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Order_Parcel, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="บันทึกข้อมูล" class="btn btn-default" />
        </div>
    </div>
</div>
}
 
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
